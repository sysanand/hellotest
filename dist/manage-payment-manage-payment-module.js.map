{"version":3,"sources":["webpack:///./src/app/layout/manage-payment/manage-payment-routing.module.ts","webpack:///./src/app/layout/manage-payment/manage-payment.component.css","webpack:///./src/app/layout/manage-payment/manage-payment.component.html","webpack:///./src/app/layout/manage-payment/manage-payment.component.ts","webpack:///./src/app/layout/manage-payment/manage-payment.module.ts"],"names":[],"mappings":"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","file":"manage-payment-manage-payment-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ManagePaymentComponent } from './manage-payment.component';\n\nconst routes: Routes = [\n  {\n    path:'',\n    component:ManagePaymentComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ManagePaymentRoutingModule { }\n","module.exports = \"\"","module.exports = \"<main class=\\\"page-content content-wrap\\\">\\n  <ng4-loading-spinner [threshold]=\\\"2000\\\" [timeout]=\\\"4000\\\" [loadingText]=\\\"'Please wait...'\\\" [zIndex]=\\\"9999\\\">\\n  </ng4-loading-spinner>\\n  <div class=\\\"fix-header fix-sidebar\\\">\\n    <div class=\\\"page-inner\\\">\\n      <div class=\\\"page-title\\\">\\n        <h3>Total Payment Received</h3>\\n        <div class=\\\"page-breadcrumb\\\">\\n          <ol class=\\\"breadcrumb\\\">\\n            <li>\\n              <a routerLink=\\\"/\\\">Dashboard</a>\\n            </li>\\n            <li class=\\\"active\\\">Total Payment Received</li>\\n          </ol>\\n        </div>\\n      </div>\\n      <div id=\\\"main-wrapper\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"panel\\\">\\n              <div class=\\\"panel-body\\\" style=\\\"margin-top:1.5px;\\\">\\n                <div class=\\\"row\\\">\\n                    <h4 style=\\\"margin-left: 15px\\\">Payment Received &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{totalpaymentreceived | currency: 'INR':'symbol':'1.0-0' }}</h4>\\n                  <!-- <div class=\\\"col-md-2\\\" style=\\\"float: right\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-success btn\\\" routerLink=\\\"\\\" style=\\\"background-color:#856c51;\\\">\\n                      <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>Add Payment</button>\\n                  </div> -->\\n                </div>\\n                <form style=\\\"margin-top:30px;\\\" [formGroup]=\\\"managepaymentForm\\\"\\n                  (ngSubmit)=\\\"managepaymentList(managepaymentForm.value,0)\\\" class=\\\"form-horizontal\\\">\\n\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-3\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label class=\\\"col-sm-4 control-label\\\">From Date</label>\\n                        <div class=\\\"col-sm-7\\\">\\n                          <!-- <input type=\\\"date\\\" formControlName=\\\"fromDate\\\" class=\\\"form-control\\\" placeholder=\\\"YYYY-MM-DD\\\"\\n                            pattern=\\\"[0-9]{4}-[0-9]{2}-[0-9]{2}\\\"> -->\\n                            <input class=\\\"form-control\\\" placeholder=\\\"DD/MM/YYYY\\\" [bsConfig]=\\\"datepickerConfig\\\" formControlName=\\\"fromDate\\\" bsDatepicker>\\n\\n                        </div>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-md-3\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label class=\\\"col-sm-4 control-label\\\">To Date</label>\\n                        <div class=\\\"col-sm-7\\\">\\n                          <!-- <input type=\\\"date\\\" formControlName=\\\"toDate\\\" placeholder=\\\"YYYY-MM-DD\\\" class=\\\"form-control\\\"\\n                            pattern=\\\"[0-9]{4}-[0-9]{2}-[0-9]{2}\\\"> -->\\n                            <input class=\\\"form-control\\\"   placeholder=\\\"DD/MM/YYYY\\\" [bsConfig]=\\\"datepickerConfig\\\" formControlName=\\\"toDate\\\" bsDatepicker>\\n\\n                        </div>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label class=\\\"col-sm-4 control-label\\\">Payment Method</label>\\n                        <div class=\\\"col-sm-7\\\">\\n                          <select selected formControlName=\\\"paymentType\\\" class=\\\"form-control\\\">\\n                            <option value=\\\"\\\">\\n                              <b>-----Select</b>-----</option>\\n                            <option *ngFor=\\\"let x of getTransactionData\\\" value=\\\"{{x.paymentTypeId}}\\\"\\n                              [hidden]=\\\"x.paymentTypeId ==2  ||x.paymentTypeId == 4 || x.paymentTypeId==5 || x.paymentTypeId==6 || x.paymentTypeId==7  \\\" >{{x.typeDesc}}\\n                            </option>\\n                          </select>\\n                        </div>\\n                      </div>\\n                    </div>\\n\\n                    <div class=\\\"col-sm-2\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!managepaymentForm.valid\\\" style=\\\"background:#856c51;\\\"\\n                          class=\\\"btn btn-success btn-rounded\\\">\\n                          <i class=\\\"fa fa-eye\\\" aria-hidden=\\\"true\\\"></i> View\\n                        </button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n                        <button type=\\\"button\\\" [disabled]=\\\"!managepaymentForm.valid\\\"\\n                          (click)=\\\"exportToExcel(managepaymentForm.value)\\\" class=\\\"btn btn-success btn\\\"\\n                          style=\\\"background-color:#856c51;\\\">\\n                          <i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>\\n                          Export</button>\\n                      </div>\\n                    </div>\\n\\n                  </div>\\n                  \\n                </form>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <!-- Row -->\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"panel panel-white\\\">\\n              \\n              <div style=\\\"clear:both\\\"></div>\\n              <div class=\\\"panel-body\\\">\\n                <div class=\\\"table-responsive\\\">\\n                  <table id=\\\"example\\\" class=\\\"display table\\\" style=\\\"width: 100%;\\\">\\n\\n\\n                    <thead>\\n                      <tr>\\n                       \\n                        <th  style=\\\"background-color: #856c51;color:white;padding-left: 2%\\\">\\n                          Transaction Date\\n\\n                        </th>\\n                        <th style=\\\"background-color: #856c51;color:white;padding-left: 2%\\\">\\n                          Amount Received\\n\\n                        </th>\\n                        <th style=\\\"background-color: #856c51;color:white;padding-left: 2%\\\">\\n                          Payment Method \\n\\n                        </th>\\n                      </tr>\\n                    </thead>\\n                    <tbody>\\n                      <tr\\n                        *ngFor=\\\"let x of totalPaymentReceivedListData  | paginate: { itemsPerPage: 10, currentPage: p,totalItems:countItems};let i = index\\\">\\n                        <td style=\\\"padding-left: 2%\\\">{{x.transactionDate | date:'dd MMM yyyy h:mm a'}}</td>\\n                        <td style=\\\"padding-left: 2%\\\">{{x.amount}}</td>\\n                        <td style=\\\"padding-left: 2%\\\">{{x.payment}}</td>\\n                        \\n                      </tr>\\n                    </tbody>\\n                  </table>\\n\\n                  <div *ngIf=\\\"!totalPaymentReceivedListData?.length\\\" class=\\\"col-md-12 col-centered text-center\\\">\\n                    <b>No Data Found</b>\\n                  </div>\\n                  <pagination-controls (pageChange)=\\\"p = $event\\\"\\n                    (click)=\\\"managepaymentList(managepaymentForm.value,p)\\\" class=\\\"my-pagination\\\">\\n                  </pagination-controls>\\n                  <!-- <pagination-controls (pageChange)=\\\"p = $event;onPaginateChange($event,managepaymentForm.value,p)\\\"\\n                    class=\\\"my-pagination\\\">\\n                  </pagination-controls> -->\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</main>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\nimport { Router } from '@angular/router';\nimport{BsDatepickerConfig} from 'ngx-bootstrap/datepicker';\nimport { environment } from '../../../environments/environment';\n\n\n@Component({\n  selector: 'app-manage-payment',\n  templateUrl: './manage-payment.component.html',\n  styleUrls: ['./manage-payment.component.css']\n})\nexport class ManagePaymentComponent implements OnInit {\n  datepickerConfig:Partial<BsDatepickerConfig>;\n  baseURL = environment.baseURL;\n  excelURL = environment.excelURL;\n  btoaUsername = environment.btoaUsername;\n  btoaPassword = environment.btoaPassword;\n  flag = environment.flag;\n  keykjm: any;\n  // transactiontypeUrl:string=this.baseURL+\"report/paymentType\";\n  transactiontypeUrl:string=this.baseURL+\"base/entity/PaymentType/findAll\"\n  totalPaymentReceivedUrl:string=this.baseURL+\"nikit/totalPaymentReceivedNikitchem\";\n  exportUrl:string=this.baseURL+\"file/nikitPaymentReceivedExport\"\n  transactionList: any;\n  getTransactionData: any;\n  managepaymentForm: FormGroup;\n  totalPaymentReceivedListData: any;\n  countItems: any;\n  fromDate: any;\n  toDate: any;\n  size: number;\n  getexportlist: any;\n  totalpaymentreceived: any;\n\n  \n  constructor(private fb: FormBuilder,private http: Http, private router: Router) {\n    this.datepickerConfig=Object.assign({},\n      {\n        containerClass:'theme-dark-blue',\n        showWeekNumbers:false,\n        dateInputFormat:'DD/MM/YYYY',\n        \n        \n      });\n    \n   }\n\n  ngOnInit() {\n\n    this.managepaymentForm = this.fb.group({     \n     \n      paymentType:[''],\n      fromDate: [''],\n      toDate: [''],\n    })\n\n    this.keykjm = JSON.parse(localStorage.getItem(\"keykjm\"));\n   \n    let headers = new Headers({\n      \"Authorization\": \"Basic \" + btoa(environment.btoaUsername + \":\" + environment.btoaPassword),\n      \"Content-Type\": \"Application/json\"\n    });\n    let options = new RequestOptions({ headers: headers });\n    this.http.get(this.transactiontypeUrl,options).subscribe(data => {\n      this.transactionList = data.json();\n      // alert(JSON.stringify(this.getStates))\n      this.getTransactionData = this.transactionList.data;\n            // alert(JSON.stringify(this.getTransactionData))\n\n      if (data.json().data.error_code == \"337\") {\n        // this.msg = \"Your session time out.Please login again\"\n        // this.openSuccessCancelSwal(this.msg);\n        alert(\"Your session time out.Please login again\")\n        this.router.navigate(['/login']);\n      }\n      if (data.json().data.error_code == \"336\") {\n        // this.msg = \"Unauthorized Login or Your session time out.Please login again\"\n        // this.openSuccessCancelSwal(this.msg);\n       alert(\"Unauthorized Login or Your session time out.Please login again\")\n        this.router.navigate(['/login']);\n      }\n    })\n\n    \n   \n\n    let obj= {\n      \"keykjm\":this.keykjm,\n      \"fromDate\": 0,\n      \"page\": 0,\n      \"paymentTypeId\": 0,\n      \"size\": 10,\n      \"toDate\": 0\n      }\n      this.http.post(this.totalPaymentReceivedUrl, obj, options)\n      .subscribe(data => {\n        this.countItems = data.json().data.count;\n        this.totalpaymentreceived = data.json().data.paymentReceived;\n        this.totalPaymentReceivedListData = data.json().data.businessJournals;       \n        if (data.json().data.error_code == \"397\") {\n          alert(\"Session Timeout\");\n          this.router.navigate(['/login']);\n        }\n        if (data.json().data.error_code == \"393\") {\n          alert(\"Session Timeout or Inavlid please try again...\");\n          this.router.navigate(['/login']);\n        }\n      });\n\n  }\n\n  managepaymentList(x, page) {\n    // alert(x.fromDate)\n    if (page > 0) {\n      page = page - 1\n    } else {\n      page = page\n    }\n    // this.page = 0;\n    // this.size = 10000;\n   \n    if (x.paymentType == \"\" || x.paymentType == undefined || x.paymentType == \"\") {\n      x.paymentType = 0;      \n    }\n    else {\n      x.paymentType = x.paymentType;\n    }\n    \n\n    if (x.fromDate == \"\" || x.fromDate == undefined || x.fromDate == \"\") {\n      this.fromDate = 0\n    }\n    else {\n      this.fromDate = Date.parse(x.fromDate)\n    }\n    if (x.toDate == \"\" || x.toDate == undefined || x.toDate == \"\") {\n      this.toDate = 0\n    }\n    else {\n      this.toDate = Date.parse(x.toDate)\n    }\n\n    let obj={\n      \"keykjm\":this.keykjm,\n      \"paymentTypeId\": +x.paymentType,\n      \"fromDate\": this.fromDate,\n      \"page\": page,\n      \"size\": 10,\n      \"toDate\": this.toDate,\n      }\n    let headers = new Headers({\n      \"Authorization\": \"Basic \" + btoa(environment.btoaUsername + \":\" + environment.btoaPassword),\n      \"Content-Type\": \"Application/json\"\n    });\n    let options = new RequestOptions({ headers: headers });\n\n    if (Date.parse(this.fromDate) > Date.parse(this.toDate)) {\n      alert(\"To date should be greater than From date\")\n    }\n\n    // this.message = \"cascas\";\n\n    this.http.post(this.totalPaymentReceivedUrl, obj, options)\n      .subscribe(data => {\n        this.countItems = data.json().data.count;\n        this.totalpaymentreceived = data.json().data.paymentReceived;\n        this.totalPaymentReceivedListData = data.json().data.businessJournals;\n        if (data.json().data.error_code == \"397\") {\n          alert(\"Session Timeout\");\n          this.router.navigate(['/login']); \n        }\n        if (data.json().data.error_code == \"393\") {\n          alert(\"Session Timeout or Inavlid please try again...\");\n          this.router.navigate(['/login']);\n        }\n      });\n  }\n\n\n  exportToExcel(x) {\n    if (x.paymentType == \"\" || x.paymentType == undefined || x.paymentType == \"\") {\n      x.paymentType = 0;      \n    }\n    else {\n      x.paymentType = x.paymentType;\n    }\n   \n\n    if (x.fromDate == \"\" || x.fromDate == undefined || x.fromDate == \"\") {\n      this.fromDate = 0\n    }\n    else {\n      this.fromDate = Date.parse(x.fromDate)\n    }\n    if (x.toDate == \"\" || x.toDate == undefined || x.toDate == \"\") {\n      this.toDate = 0\n    }\n    else {\n      this.toDate = Date.parse(x.toDate)\n    }\n\n    if (this.fromDate > this.toDate) {\n      alert(\"To date should be greater than From date\")\n    }else{\n\n      let obj={\n        \"keykjm\":this.keykjm,\n        \"paymentTypeId\": +x.paymentType,\n        \"fromDate\": this.fromDate,\n        \"toDate\": this.toDate\n     \n        }\n     \n     let headers = new Headers({\n       \"Authorization\": \"Basic \" + btoa(environment.btoaUsername + \":\" + environment.btoaPassword),\n       \"Content-Type\": \"Application/json\"\n     });\n     let options = new RequestOptions({ headers: headers });\n  \n     this.http.post(this.exportUrl, obj, options)\n       .subscribe(data => {\n        // {\"data\":\"ConsumerDetails190621144835635.xlsx\",\"status\":\"success\"}\n        if(data.json().status == \"success\"){\n          this.getexportlist = data.json().data;\n          window.open(this.excelURL + \"report/\" + this.getexportlist, '_blank');\n        }\n         if (data.json().data.error_code == \"397\") {\n           alert(\"Session Timeout\");\n           this.router.navigate(['/login']);\n         }\n         if (data.json().data.error_code == \"393\") {\n           alert(\"Session Timeout or Inavlid please try again...\");\n           this.router.navigate(['/login']);\n         }\n       });\n    }\n }\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ManagePaymentRoutingModule } from './manage-payment-routing.module';\nimport { ManagePaymentComponent } from './manage-payment.component';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { Ng4LoadingSpinnerModule } from 'ng4-loading-spinner';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {BsDatepickerModule} from 'ngx-bootstrap/datepicker';\nimport { FilterPipeModule } from 'ngx-filter-pipe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ManagePaymentRoutingModule,\n    NgxPaginationModule,\n    Ng4LoadingSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BsDatepickerModule.forRoot(),\n    FilterPipeModule\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ],\n  declarations: [ManagePaymentComponent]\n})\nexport class ManagePaymentModule { }\n"],"sourceRoot":""}