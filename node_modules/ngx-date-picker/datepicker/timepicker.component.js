import { Component } from '@angular/core';
import { DatePickerInnerComponent } from './datepicker-inner.component';
export var TimePickerComponent = (function () {
    function TimePickerComponent(datePicker) {
        this.rows = [];
        this.rowsMinutes = [];
        this.datePicker = datePicker;
    }
    TimePickerComponent.prototype.ngOnInit = function () {
        var self = this;
        this.datePicker.setRefreshViewHandler(function () {
            var year = this.activeDate.getFullYear();
            var month = this.activeDate.getMonth();
            var day = this.activeDate.getDate();
            var hours = [];
            for (var i = 0; i < 24; i++) {
                var date = new Date(year, month, day, i);
                var _dateObject = this.createDateObject(date, 'H', 'hour');
                _dateObject.uid = this.uniqueId + '-' + i;
                hours[i] = _dateObject;
            }
            self.rows = this.split(hours, 3);
        }, 'hour');
        this.datePicker.setRefreshViewHandler(function () {
            var year = this.activeDate.getFullYear();
            var month = this.activeDate.getMonth();
            var day = this.activeDate.getDate();
            var hour = this.activeDate.getHours();
            var minutes = [];
            for (var i = 0; i < 60; i += 5) {
                var date = new Date(year, month, day, hour, i);
                var _dateObject = this.createDateObject(date, 'm', 'minute');
                _dateObject.uid = this.uniqueId + '-' + i;
                minutes[minutes.length] = _dateObject;
            }
            self.rowsMinutes = this.split(minutes, 2);
        }, 'minute');
        this.datePicker.setCompareHandler(function (date1, date2) {
            var d1 = new Date(date1.getFullYear(), date1.getMonth(), date1.getDate(), date1.getHours());
            var d2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate(), date2.getHours());
            return d1.getTime() - d2.getTime();
        }, 'hour');
        this.datePicker.setCompareHandler(function (date1, date2) {
            var d1 = new Date(date1.getFullYear(), date1.getMonth(), date1.getDate(), date1.getHours(), date1.getMinutes());
            var d2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate(), date2.getHours(), date2.getMinutes());
            return d1.getTime() - d2.getTime();
        }, 'minute');
        this.datePicker.refreshView();
    };
    TimePickerComponent.prototype.setHour = function (event, date) {
        event.stopPropagation();
        var year = this.datePicker.activeDate.getFullYear();
        var month = this.datePicker.activeDate.getMonth();
        var day = this.datePicker.activeDate.getDate();
        var hour = date.getHours();
        var minutes = this.datePicker.activeDate.getMinutes();
        var newDate = new Date(year, month, day, hour, minutes);
        this.datePicker.select(newDate, false);
    };
    TimePickerComponent.prototype.setMinute = function (event, date) {
        event.stopPropagation();
        var year = this.datePicker.activeDate.getFullYear();
        var month = this.datePicker.activeDate.getMonth();
        var day = this.datePicker.activeDate.getDate();
        var hour = this.datePicker.activeDate.getHours();
        var minutes = date.getMinutes();
        var newDate = new Date(year, month, day, hour, minutes);
        this.datePicker.select(newDate, false);
    };
    TimePickerComponent.prototype.changeMinute = function (event) {
        event.stopPropagation();
        var value = event.target.value;
        var year = this.datePicker.activeDate.getFullYear();
        var month = this.datePicker.activeDate.getMonth();
        var day = this.datePicker.activeDate.getDate();
        var hour = this.datePicker.activeDate.getHours();
        var date = new Date(year, month, day, hour, value);
        this.datePicker.select(date, false);
    };
    TimePickerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'timepicker',
                    template: "\n    <table class=\"pull-left\" *ngIf=\"datePicker.type ==='datetime'\" style=\"margin: 0 5px\">\n      <tbody>\n      <tr *ngFor=\"let rowz of rows\">\n        <td *ngFor=\"let dtz of rowz\" class=\"text-center\" role=\"gridcell\">\n          <button type=\"button\" style=\"min-width:100%;\" class=\"btn btn-sm {{dtz.customClass}}\"\n                  [ngClass]=\"{disabled: dtz.disabled, active: !isBs4 && datePicker.isActive(dtz, 'hour'), 'btn-default': !isBs4}\"\n                  [disabled]=\"dtz.disabled\"\n                  (click)=\"setHour($event, dtz.date)\" tabindex=\"-1\">\n            <span>\n              {{dtz.label}}\n            </span>\n          </button>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n    <table class=\"pull-left\" *ngIf=\"datePicker.type ==='datetime'\" style=\"margin: 0 5px\">\n      <colgroup>\n        <col width=\"36px\">\n        <col width=\"36px\">\n      </colgroup>\n      <tbody>\n      <tr *ngFor=\"let rowz of rowsMinutes\">\n        <td *ngFor=\"let dtz of rowz\" class=\"text-center\" role=\"gridcell\">\n          <button type=\"button\" style=\"min-width:100%;\" class=\"btn btn-sm {{dtz.customClass}}\"\n                  [ngClass]=\"{'btn-info': dtz.selected, disabled: dtz.disabled, active: !isBs4 && datePicker.isActive(dtz, 'minute'), 'btn-default': !isBs4}\"\n                  [disabled]=\"dtz.disabled\"\n                  (click)=\"setMinute($event, dtz.date)\" tabindex=\"-1\">\n            <span [ngClass]=\"{'text-info': !isBs4 && dtz.current}\">\n              {{dtz.label}}\n            </span>\n          </button>\n        </td>\n      </tr>\n      <tr>\n        <td colspan=\"2\">\n          <input type=\"number\" placeholder=\"Min\" class=\"form-control\" (keyup)=\"changeMinute($event)\" autocapitalize=\"off\"\n                 autocorrect=\"off\" min=\"0\" max=\"60\">\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  ",
                    styles: ["\n    input[type=number] {\n      -webkit-appearance: none;\n    }\n  "]
                },] },
    ];
    /** @nocollapse */
    TimePickerComponent.ctorParameters = function () { return [
        { type: DatePickerInnerComponent, },
    ]; };
    return TimePickerComponent;
}());
//# sourceMappingURL=timepicker.component.js.map