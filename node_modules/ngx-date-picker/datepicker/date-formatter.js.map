{"version":3,"file":"date-formatter.js","sourceRoot":"","sources":["../../src/datepicker/date-formatter.ts"],"names":[],"mappings":"OAAO,MAAM,MAAM,QAAQ;AAE3B;IAAA;IAYA,CAAC;IAXQ,8BAAM,GAAb,UAAc,IAAU,EAAE,MAAc;QACtC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAC/C,CAAC;IAED,8BAAM,GAAN,UAAO,IAAY;QACjB,IAAM,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC3C,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC;cAC/B,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EACrF,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;cACzG,KAAK,CAAC,CAAC;IACb,CAAC;IACH,oBAAC;AAAD,CAAC,AAZD,IAYC","sourcesContent":["import moment from 'moment';\n\nexport class DateFormatter {\n  public format(date: Date, format: string): string {\n    return moment(date.getTime()).format(format);\n  }\n\n  toDate(date: string): Date {\n    const currentDate = moment.parseZone(date);\n    return moment.isMoment(currentDate)\n      ? new Date(parseInt(currentDate.format('YYYY')), parseInt(currentDate.format('MM')) - 1,\n        parseInt(currentDate.format('DD')), parseInt(currentDate.format('H')), parseInt(currentDate.format('m')))\n      : void 0;\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}