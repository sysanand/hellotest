{"version":3,"file":"timezonepicker.component.js","sourceRoot":"","sources":["../../src/datepicker/timezonepicker.component.ts"],"names":[],"mappings":"OAAO,EAAC,SAAS,EAAS,MAAM,eAAe;OACxC,EAAC,wBAAwB,EAAC,MAAM,8BAA8B;OAC9D,EAAC,gBAAgB,EAAC,MAAM,qBAAqB;OAC7C,MAAM,MAAM,QAAQ;AAE3B,0CAA0C;AAC1C,IAAM,gBAAgB,GAAQ;IAC5B,KAAK,EAAE;QACL,UAAU,EAAE,MAAM;QAClB,WAAW,EAAE,MAAM;KACpB;IACD,KAAK,EAAE;QACL,UAAU,EAAE,gEAEX;QACD,WAAW,EAAE,iEAEZ;KACF;CACF,CAAC;AAGF;IAOE,iCAAmB,UAAoC,EACpC,MAAwB;QAR7C,iBAgKC;QA7JQ,WAAM,GAAW,CAAC,CAAC;QAEnB,cAAS,GAAa,EAAE,CAAC;QAI9B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAM,aAAa,GAAG,MAAM,CAAC,SAAS,IAAI,EAAE,CAAC;QAC7C,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,GAAG,CAAC,UAAC,IAAS;YAC3C,MAAM,CAAC,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAQ,GAAR;QACE,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC;YACpC,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC;YACpC,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,UAAC,IAAS;gBAC/C,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,QAAQ,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;oBAC5D,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;YACH,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACzF,MAAM,CAAC;YACT,CAAC;YAED,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;gBAC3B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC9D,IAAI,OAAO,GAAG,KAAK,GAAG,CAAC,CAAC;gBACxB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,OAAO,OAAO,IAAI,CAAC,IAAI,OAAO,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC;oBAC5C,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBACnE,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;oBACtB,OAAO,EAAE,CAAC;gBACZ,CAAC;gBACD,IAAI,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC;gBACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBAChE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC7D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;oBACnB,IAAI,EAAE,CAAC;gBACT,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;gBAC3B,IAAI,OAAO,GAAG,CAAC,CAAC;gBAChB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChB,OAAO,OAAO,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC;oBAC9C,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBAChE,OAAO,EAAE,CAAC;gBACZ,CAAC;gBACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;YACjD,CAAC;QAEH,CAAC,EAAE,UAAU,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;IAChC,CAAC;IAEM,sCAAI,GAAX,UAAY,KAAU,EAAE,SAAiB;QACvC,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YAClB,KAAK,MAAM;gBACT,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBACvC,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC;oBAC5B,IAAI,CAAC,MAAM,EAAE,CAAC;gBAChB,CAAC;gBACD,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACzE,KAAK,CAAC;YACR,KAAK,MAAM;gBACT,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;gBAC9B,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACtE,KAAK,CAAC;YACR;gBACE,KAAK,CAAC;QACV,CAAC;IACH,CAAC;IAEM,6CAAW,GAAlB,UAAmB,KAAU,EAAE,IAAY;QACzC,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACrD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC7B,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACxD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,WAAW,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QACjC,CAAC;QACD,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;QAChC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAM,OAAO,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EACnG,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC5G,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACzC,CAAC;IAEM,sDAAoB,GAA3B,UAA4B,IAAS;QACnC,IAAI,UAAU,GAAQ,EAAE,CAAC;QACzB,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC5B,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC9B,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,KAAK,IAAI,CAAC,IAAI,CAAC;QAC7D,MAAM,CAAC,UAAU,CAAC;IACpB,CAAC;IAEM,0CAAQ,GAAf,UAAgB,IAAY;QAC1B,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,EAAE,CAAC,KAAK,IAAI,CAAC;IACvF,CAAC;IAEO,uCAAK,GAAb,UAAc,KAAa;QACzB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IAC3C,CAAC;IACI,kCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,gBAAgB;oBAC1B,QAAQ,EAAE,w0CAgCT;oBACD,MAAM,EAAE,CAAC,qDAIR,CAAC;iBACH,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,sCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,wBAAwB,GAAG;QAClC,EAAC,IAAI,EAAE,gBAAgB,GAAG;KACzB,EAH6F,CAG7F,CAAC;IACF,8BAAC;AAAD,CAAC,AAhKD,IAgKC","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {DatePickerInnerComponent} from './datepicker-inner.component';\nimport {DatepickerConfig} from './datepicker.config';\nimport moment from 'moment';\n\n// write an interface for template options\nconst TEMPLATE_OPTIONS: any = {\n  'bs4': {\n    ARROW_LEFT: '&lt;',\n    ARROW_RIGHT: '&gt;'\n  },\n  'bs3': {\n    ARROW_LEFT: `\n    <i class=\"glyphicon glyphicon-chevron-left\"></i>\n    `,\n    ARROW_RIGHT: `\n    <i class=\"glyphicon glyphicon-chevron-right\"></i>\n    `\n  }\n};\n\n\nexport class TimezonePickerComponent implements OnInit {\n  public datePicker: DatePickerInnerComponent;\n  public displayTimeZones: Object[];\n  public minPos: number = 0;\n  public maxPos: number;\n  public timeZones: Object[] = [];\n\n  public constructor(datePicker: DatePickerInnerComponent,\n                     config: DatepickerConfig) {\n    this.datePicker = datePicker;\n    const timezoneArray = config.timeZones || [];\n    this.timeZones = timezoneArray.map((zone: any) => {\n      return this.createTimezoneObject(zone);\n    });\n  }\n\n  ngOnInit() {\n    let self = this;\n    this.datePicker.setRefreshViewHandler(function (): void {\n      const timezone = this.timezone || 0;\n      const index = self.timeZones.findIndex((zone: any) => {\n        if (zone.zone === timezone || (timezone / 60) === zone.zone) {\n          return true;\n        }\n      });\n\n      if (self.minPos >= 0 && self.maxPos >= 0 && self.minPos <= index && index <= self.maxPos) {\n        return;\n      }\n\n      if (index !== -1) {\n        self.displayTimeZones = [];\n        self.displayTimeZones.push(self.clone(self.timeZones[index]));\n        let reverse = index - 1;\n        self.minPos = index;\n        while (reverse >= 0 && reverse >= index - 2) {\n          self.displayTimeZones.unshift(self.clone(self.timeZones[reverse]));\n          self.minPos = reverse;\n          reverse--;\n        }\n        let next = index + 1;\n        self.maxPos = index;\n        while (self.timeZones[next] && self.displayTimeZones.length < 5) {\n          self.displayTimeZones.push(self.clone(self.timeZones[next]));\n          self.maxPos = next;\n          next++;\n        }\n      } else {\n        self.displayTimeZones = [];\n        let counter = 0;\n        self.minPos = 0;\n        while (counter < 5 && self.timeZones[counter]) {\n          self.displayTimeZones.push(self.clone(self.timeZones[counter]));\n          counter++;\n        }\n        self.maxPos = self.displayTimeZones.length - 1;\n      }\n\n    }, 'timezone');\n    this.datePicker.refreshView();\n  }\n\n  public move(event: any, direction: string) {\n    event.stopPropagation();\n    switch (direction) {\n      case 'prev':\n        if (this.displayTimeZones.length === 5) {\n          this.displayTimeZones.pop();\n          this.maxPos--;\n        }\n        this.displayTimeZones.unshift(this.clone(this.timeZones[--this.minPos]));\n        break;\n      case 'next':\n        this.displayTimeZones.shift();\n        this.minPos++;\n        this.displayTimeZones.push(this.clone(this.timeZones[++this.maxPos]));\n        break;\n      default:\n        break;\n    }\n  }\n\n  public setTimezone(event: any, zone: number) {\n    event.stopPropagation();\n    let currentDate = moment(this.datePicker.activeDate);\n    if (this.datePicker.timezone) {\n      currentDate.utcOffset(this.datePicker.timezone, true);\n    } else {\n      currentDate.utcOffset(0, true);\n    }\n    this.datePicker.timezone = zone;\n    currentDate.utcOffset(this.datePicker.timezone);\n    const newDate = new Date(parseInt(currentDate.format('YYYY')), parseInt(currentDate.format('MM')) - 1,\n      parseInt(currentDate.format('DD')), parseInt(currentDate.format('H')), parseInt(currentDate.format('m')));\n    this.datePicker.select(newDate, false);\n  }\n\n  public createTimezoneObject(zone: any) {\n    let dateObject: any = {};\n    dateObject.zone = zone.zone;\n    dateObject.label = zone.label;\n    dateObject.selected = this.datePicker.timezone === zone.zone;\n    return dateObject;\n  }\n\n  public isActive(zone: number) {\n    return this.datePicker.timezone === zone || (this.datePicker.timezone / 60) === zone;\n  }\n\n  private clone(value: Object) {\n    return JSON.parse(JSON.stringify(value));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'timezonepicker',\n  template: `\n    <table *ngIf=\"datePicker.type ==='datetime'\" style=\"width: 100%; border-top: 1px solid #eee;\">\n      <thead>\n      <tr>\n        <th>\n          <button type=\"button\" [disabled]=\"minPos == 0\"\n                  class=\"btn btn-default btn-secondary btn-sm pull-left\"\n                  (click)=\"move($event, 'prev')\"\n                  tabindex=\"-1\">\n            <i class=\"glyphicon glyphicon-chevron-left\"></i>\n          </button>\n        </th>\n        <th *ngFor=\"let tz of displayTimeZones\">\n          <button type=\"button\" style=\"min-width:100%;\" class=\"btn btn-sm\"\n                  [ngClass]=\"{'btn-info': tz.selected, active: !isBs4 && isActive(tz.zone), 'btn-default': !isBs4}\"\n                  (click)=\"setTimezone($event, tz.zone)\" tabindex=\"-1\">\n            <span [ngClass]=\"{'text-info': !isBs4}\">\n              {{tz.label}}\n            </span>\n          </button>\n        </th>\n        <th>\n          <button type=\"button\" [disabled]=\"maxPos == timeZones.length - 1\"\n                  class=\"btn btn-default btn-secondary btn-sm pull-right\"\n                  (click)=\"move($event, 'next')\"\n                  tabindex=\"-1\">\n            <i class=\"glyphicon glyphicon-chevron-right\"></i>\n          </button>\n        </th>\n      </tr>\n      </thead>\n    </table>\n  `,\n  styles: [`\n    tr > th {\n      padding-top: 5px;\n    }\n  `]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DatePickerInnerComponent, },\n{type: DatepickerConfig, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}