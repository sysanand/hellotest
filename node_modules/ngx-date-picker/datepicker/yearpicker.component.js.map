{"version":3,"file":"yearpicker.component.js","sourceRoot":"","sources":["../../src/datepicker/yearpicker.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit} from '@angular/core';\n\nimport {isBs3} from '../utils/ng2-bootstrap-config';\nimport {DatePickerInnerComponent} from './datepicker-inner.component';\n\n\nexport class YearPickerComponent implements OnInit {\n  public datePicker: DatePickerInnerComponent;\n  public title: string;\n  public rows: any[] = [];\n\n  public constructor(datePicker: DatePickerInnerComponent) {\n    this.datePicker = datePicker;\n  }\n\n  public get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  public ngOnInit(): void {\n    let self = this;\n\n    this.datePicker.stepYear = {years: this.datePicker.yearRange};\n\n    this.datePicker.setRefreshViewHandler(function (): void {\n      let years: any[] = new Array(this.yearRange);\n      let date: Date;\n      let start = self.getStartingYear(this.activeDate.getFullYear());\n\n      for (let i = 0; i < this.yearRange; i++) {\n        date = new Date(start + i, 0, 1);\n        date = this.fixTimeZone(date);\n        years[i] = this.createDateObject(date, this.formatYear);\n        years[i].uid = this.uniqueId + '-' + i;\n      }\n\n      self.title = [years[0].label,\n        years[this.yearRange - 1].label].join(' - ');\n      self.rows = this.split(years, self.datePicker.yearColLimit);\n    }, 'year');\n\n    this.datePicker.setCompareHandler(function (date1: Date, date2: Date): number {\n      return date1.getFullYear() - date2.getFullYear();\n    }, 'year');\n\n    this.datePicker.refreshView();\n  }\n\n  protected getStartingYear(year: number): number {\n    // todo: parseInt\n    return ((year - 1) / this.datePicker.yearRange) * this.datePicker.yearRange + 1;\n  }\n\n  setYear(event: any, date: any) {\n    event.stopPropagation();\n    let year = date.getFullYear();\n    let month = this.datePicker.activeDate.getMonth();\n    let day = this.datePicker.activeDate.getDate();\n    let hour = this.datePicker.activeDate.getHours();\n    let minutes = this.datePicker.activeDate.getMinutes();\n    const newDate = new Date(year, month, day, hour, minutes);\n    this.datePicker.select(newDate);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'yearpicker',\n  template: `\n    <table *ngIf=\"datePicker.datepickerMode==='year'\" role=\"grid\" class=\"pull-left\">\n      <thead>\n      <tr>\n        <th>\n          <button type=\"button\" class=\"btn btn-default btn-sm pull-left\"\n                  (click)=\"datePicker.move($event, -1)\" tabindex=\"-1\">\n            <i class=\"glyphicon glyphicon-chevron-left\"></i>\n          </button>\n        </th>\n        <th [attr.colspan]=\"((datePicker.yearColLimit - 2) <= 0) ? 1 : datePicker.yearColLimit - 2\">\n          <button [id]=\"datePicker.uniqueId + '-title'\" role=\"heading\"\n                  type=\"button\" class=\"btn btn-default btn-sm\"\n                  (click)=\"datePicker.toggleMode($event)\"\n                  [disabled]=\"datePicker.datepickerMode === datePicker.maxMode\"\n                  [ngClass]=\"{disabled: datePicker.datepickerMode === datePicker.maxMode}\" tabindex=\"-1\"\n                  style=\"width:100%;\">\n            <strong>{{title}}</strong>\n          </button>\n        </th>\n        <th>\n          <button type=\"button\" class=\"btn btn-default btn-sm pull-right\"\n                  (click)=\"datePicker.move($event, 1)\" tabindex=\"-1\">\n            <i class=\"glyphicon glyphicon-chevron-right\"></i>\n          </button>\n        </th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor=\"let rowz of rows\">\n        <td *ngFor=\"let dtz of rowz\" class=\"text-center\" role=\"gridcell\">\n          <button type=\"button\" style=\"min-width:100%;\" class=\"btn btn-default\"\n                  [ngClass]=\"{'btn-link': isBs4 && !dtz.selected && !datePicker.isActive(dtz), 'btn-info': dtz.selected || (isBs4 && !dtz.selected && datePicker.isActive(dtz)), disabled: dtz.disabled, active: !isBs4 && datePicker.isActive(dtz)}\"\n                  [disabled]=\"dtz.disabled\"\n                  (click)=\"setYear($event, dtz.date)\" tabindex=\"-1\">\n            <span\n              [ngClass]=\"{'text-success': isBs4 && dtz.current, 'text-info': !isBs4 && dtz.current}\">{{dtz.label}}</span>\n          </button>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DatePickerInnerComponent, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}