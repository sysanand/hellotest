{"version":3,"file":"timepicker.component.js","sourceRoot":"","sources":["../../src/datepicker/timepicker.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {DatePickerInnerComponent} from './datepicker-inner.component';\n\n\nexport class TimePickerComponent implements OnInit {\n  public rows: any[] = [];\n  public rowsMinutes: any[] = [];\n  public datePicker: DatePickerInnerComponent;\n\n  public constructor(datePicker: DatePickerInnerComponent) {\n    this.datePicker = datePicker;\n  }\n\n  ngOnInit() {\n    let self = this;\n\n    this.datePicker.setRefreshViewHandler(function (): void {\n      let year = this.activeDate.getFullYear();\n      let month = this.activeDate.getMonth();\n      let day = this.activeDate.getDate();\n\n      let hours: any[] = [];\n      for (let i = 0; i < 24; i++) {\n        const date = new Date(year, month, day, i);\n        let _dateObject = this.createDateObject(date, 'H', 'hour');\n        _dateObject.uid = this.uniqueId + '-' + i;\n        hours[i] = _dateObject;\n      }\n      self.rows = this.split(hours, 3);\n\n    }, 'hour');\n\n    this.datePicker.setRefreshViewHandler(function (): void {\n      let year = this.activeDate.getFullYear();\n      let month = this.activeDate.getMonth();\n      let day = this.activeDate.getDate();\n      let hour = this.activeDate.getHours();\n\n      let minutes: any[] = [];\n      for (let i = 0; i < 60; i+=5) {\n        const date = new Date(year, month, day, hour, i);\n        let _dateObject = this.createDateObject(date, 'm', 'minute');\n        _dateObject.uid = this.uniqueId + '-' + i;\n        minutes[minutes.length] = _dateObject;\n      }\n      self.rowsMinutes = this.split(minutes, 2);\n\n    }, 'minute');\n\n    this.datePicker.setCompareHandler(function (date1: Date, date2: Date): number {\n      let d1 = new Date(date1.getFullYear(), date1.getMonth(), date1.getDate(), date1.getHours());\n      let d2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate(), date2.getHours());\n      return d1.getTime() - d2.getTime();\n    }, 'hour');\n\n    this.datePicker.setCompareHandler(function (date1: Date, date2: Date): number {\n      let d1 = new Date(date1.getFullYear(), date1.getMonth(), date1.getDate(), date1.getHours(), date1.getMinutes());\n      let d2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate(), date2.getHours(), date2.getMinutes());\n      return d1.getTime() - d2.getTime();\n    }, 'minute');\n\n    this.datePicker.refreshView();\n  }\n\n  setHour(event: any, date: any) {\n    event.stopPropagation();\n    let year = this.datePicker.activeDate.getFullYear();\n    let month = this.datePicker.activeDate.getMonth();\n    let day = this.datePicker.activeDate.getDate();\n    let hour = date.getHours();\n    let minutes = this.datePicker.activeDate.getMinutes();\n    const newDate = new Date(year, month, day, hour, minutes);\n    this.datePicker.select(newDate, false);\n  }\n\n  setMinute(event: any, date: any) {\n    event.stopPropagation();\n    let year = this.datePicker.activeDate.getFullYear();\n    let month = this.datePicker.activeDate.getMonth();\n    let day = this.datePicker.activeDate.getDate();\n    let hour = this.datePicker.activeDate.getHours();\n    let minutes = date.getMinutes();\n    const newDate = new Date(year, month, day, hour, minutes);\n    this.datePicker.select(newDate, false);\n  }\n\n  changeMinute(event: any) {\n    event.stopPropagation();\n    let value = event.target.value;\n    let year = this.datePicker.activeDate.getFullYear();\n    let month = this.datePicker.activeDate.getMonth();\n    let day = this.datePicker.activeDate.getDate();\n    let hour = this.datePicker.activeDate.getHours();\n    const date = new Date(year, month, day, hour, value);\n    this.datePicker.select(date, false);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'timepicker',\n  template: `\n    <table class=\"pull-left\" *ngIf=\"datePicker.type ==='datetime'\" style=\"margin: 0 5px\">\n      <tbody>\n      <tr *ngFor=\"let rowz of rows\">\n        <td *ngFor=\"let dtz of rowz\" class=\"text-center\" role=\"gridcell\">\n          <button type=\"button\" style=\"min-width:100%;\" class=\"btn btn-sm {{dtz.customClass}}\"\n                  [ngClass]=\"{disabled: dtz.disabled, active: !isBs4 && datePicker.isActive(dtz, 'hour'), 'btn-default': !isBs4}\"\n                  [disabled]=\"dtz.disabled\"\n                  (click)=\"setHour($event, dtz.date)\" tabindex=\"-1\">\n            <span>\n              {{dtz.label}}\n            </span>\n          </button>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n    <table class=\"pull-left\" *ngIf=\"datePicker.type ==='datetime'\" style=\"margin: 0 5px\">\n      <colgroup>\n        <col width=\"36px\">\n        <col width=\"36px\">\n      </colgroup>\n      <tbody>\n      <tr *ngFor=\"let rowz of rowsMinutes\">\n        <td *ngFor=\"let dtz of rowz\" class=\"text-center\" role=\"gridcell\">\n          <button type=\"button\" style=\"min-width:100%;\" class=\"btn btn-sm {{dtz.customClass}}\"\n                  [ngClass]=\"{'btn-info': dtz.selected, disabled: dtz.disabled, active: !isBs4 && datePicker.isActive(dtz, 'minute'), 'btn-default': !isBs4}\"\n                  [disabled]=\"dtz.disabled\"\n                  (click)=\"setMinute($event, dtz.date)\" tabindex=\"-1\">\n            <span [ngClass]=\"{'text-info': !isBs4 && dtz.current}\">\n              {{dtz.label}}\n            </span>\n          </button>\n        </td>\n      </tr>\n      <tr>\n        <td colspan=\"2\">\n          <input type=\"number\" placeholder=\"Min\" class=\"form-control\" (keyup)=\"changeMinute($event)\" autocapitalize=\"off\"\n                 autocorrect=\"off\" min=\"0\" max=\"60\">\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  `,\n  styles: [`\n    input[type=number] {\n      -webkit-appearance: none;\n    }\n  `]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DatePickerInnerComponent, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}